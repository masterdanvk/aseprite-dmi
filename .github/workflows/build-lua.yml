name: Build Lua
on:
  workflow_dispatch:
  push:
    paths:
      - '.github/workflows/build-lua.yml'

jobs:
  build-lua:
    name: Build Lua in Steam Runtime
    runs-on: ubuntu-latest
    steps:
      - name: Build in Steam Runtime container
        uses: addnab/docker-run-action@v3
        with:
          image: registry.gitlab.steamos.cloud/steamrt/scout/sdk
          options: -v ${{ github.workspace }}:/work
          run: |
            # start
            set -ex
            apt-get update
            apt-get install -y curl build-essential

            WORKDIR="/tmp/lua-build"
            mkdir -p "$WORKDIR"
            cd "$WORKDIR"

            # Download with proper error checking
            curl -fsSL "https://www.lua.org/ftp/lua-5.4.7.tar.gz" --output lua.tar.gz

            # Verify download
            if [ ! -s lua.tar.gz ]; then
              echo "Download failed or file is empty"
              exit 1
            fi

            # Extract with verification
            tar xf lua.tar.gz
            if [ ! -d "lua-5.4.6" ]; then
              echo "Extraction failed"
              exit 1
            fi

            cd "lua-5.4.6"

            # Create patches
            cat > lua-shared-lib.patch << 'EOF'
            diff --git a/Makefile b/Makefile
            index 416f444..eeaff03 100644
            --- a/Makefile
            +++ b/Makefile
            @@ -52,7 +52,7 @@ R= $V.0
            all:	$(PLAT)

            $(PLATS) help test clean:
            -	@cd src && $(MAKE) $@
            +	@cd src && $(MAKE) $@ V=$(V) R=$(R)

            install: dummy
                cd src && $(MKDIR) $(INSTALL_BIN) $(INSTALL_INC) $(INSTALL_LIB) $(INSTALL_MAN) $(INSTALL_LMOD) $(INSTALL_CMOD)
            diff --git a/src/Makefile b/src/Makefile
            index 514593d..372a6dc 100644
            --- a/src/Makefile
            +++ b/src/Makefile
            @@ -33,6 +33,7 @@ CMCFLAGS= -Os
            PLATS= guess aix bsd c89 freebsd generic linux linux-readline macosx mingw posix solaris

            LUA_A=	liblua.a
            +LUA_SO= liblua.so
            CORE_O=	lapi.o lcode.o lctype.o ldebug.o ldo.o ldump.o lfunc.o lgc.o llex.o lmem.o lobject.o lopcodes.o lparser.o lstate.o lstring.o ltable.o ltm.o lundump.o lvm.o lzio.o
            LIB_O=	lauxlib.o lbaselib.o lcorolib.o ldblib.o liolib.o lmathlib.o loadlib.o loslib.o lstrlib.o ltablib.o lutf8lib.o linit.o
            BASE_O= $(CORE_O) $(LIB_O) $(MYOBJS)
            @@ -44,7 +45,7 @@ LUAC_T=	luac
            LUAC_O=	luac.o

            ALL_O= $(BASE_O) $(LUA_O) $(LUAC_O)
            -ALL_T= $(LUA_A) $(LUA_T) $(LUAC_T)
            +ALL_T= $(LUA_A) $(LUA_T) $(LUAC_T) $(LUA_SO)
            ALL_A= $(LUA_A)

            # Targets start here.
            @@ -60,6 +61,12 @@ $(LUA_A): $(BASE_O)
                $(AR) $@ $(BASE_O)
                $(RANLIB) $@

            +$(LUA_SO): $(CORE_O) $(LIB_O)
            +	$(CC) -shared -ldl -Wl,-soname,$(LUA_SO).$(V) -o $@.$(R) $? -lm $(MYLDFLAGS)
            +	ln -sf $(LUA_SO).$(R) $(LUA_SO).$(V)
            +	ln -sf $(LUA_SO).$(R) $(LUA_SO)
            +
            +
            $(LUA_T): $(LUA_O) $(LUA_A)
                $(CC) -o $@ $(LDFLAGS) $(LUA_O) $(LUA_A) $(LIBS)
            EOF

            patch -p1 < lua-shared-lib.patch

            cd src

            # Clean build first
            make clean

            # Build all object files
            gcc -std=gnu99 -O2 -Wall -Wextra -DLUA_COMPAT_5_3 -DLUA_USE_LINUX $(SYSCFLAGS) $(MYCFLAGS) -fPIC -c *.c

            # Build shared library directly
            gcc -shared -o liblua5.4.so *.o -lm -ldl -o liblua5.4.so

            # Test the library
            nm -D liblua5.4.so | grep ' T ' || echo "No exported symbols found!"
            ldd liblua5.4.so || echo "Library dependencies not found!"

            mkdir -p /work/artifacts
            cp liblua5.4.so /work/artifacts/

            # Verify copy
            if [ ! -f /work/artifacts/liblua5.4.so ]; then
              echo "Failed to copy library"
              exit 1
            fi

      - name: Upload Lua library
        uses: actions/upload-artifact@v4
        with:
          name: steamrt-lua
          path: artifacts/liblua5.4.so
          if-no-files-found: error
