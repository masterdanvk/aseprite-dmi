name: Build Lua
on:
  workflow_dispatch:
  push:
    paths:
      - '.github/workflows/build-lua.yml'

jobs:
  build-lua:
    name: Build Lua in Steam Runtime
    runs-on: ubuntu-latest
    steps:
      - name: Build in Steam Runtime container
        uses: addnab/docker-run-action@v3
        with:
          image: registry.gitlab.steamos.cloud/steamrt/scout/sdk
          options: -v ${{ github.workspace }}:/work
          run: |
            # start
            set -ex
            apt-get update
            apt-get install -y curl build-essential

            WORKDIR="/tmp/lua-build"
            mkdir -p "$WORKDIR"
            cd "$WORKDIR"

            # Download with proper error checking
            curl -fsSL "https://www.lua.org/ftp/lua-5.4.6.tar.gz" --output lua.tar.gz

            # Verify download
            if [ ! -s lua.tar.gz ]; then
              echo "Download failed or file is empty"
              exit 1
            fi

            # Extract with verification
            tar xf lua.tar.gz
            if [ ! -d "lua-5.4.6" ]; then
              echo "Extraction failed"
              exit 1
            fi

            cd "lua-5.4.6"
            make clean

            # Build the object files with PIC
            cd src
            # First compile the library objects (exclude executables)
            for f in l*.c; do
              if [ "$f" != "lua.c" ] && [ "$f" != "luac.c" ]; then
                gcc -std=gnu99 -O2 -Wall -Wextra -DLUA_COMPAT_5_3 -DLUA_USE_LINUX -fPIC -DLUA_BUILD_AS_DLL -c "$f"
              fi
            done

            # Create shared library with proper version script
            echo "{ global: lua*; luaL*; luaopen*; local: *; };" > version.script
            gcc -shared -o liblua5.4.so l*.o -lm -ldl -Wl,--version-script=version.script -Wl,-soname,liblua5.4.so

            # Test the library
            nm -D liblua5.4.so | grep ' T ' || echo "No exported symbols found!"
            ldd liblua5.4.so || echo "Library dependencies not found!"

            # Verify build output
            if [ ! -f liblua5.4.so ]; then
              echo "Build failed - library not found"
              exit 1
            fi

            mkdir -p /work/artifacts
            cp liblua5.4.so /work/artifacts/

            # Verify copy
            if [ ! -f /work/artifacts/liblua5.4.so ]; then
              echo "Failed to copy library"
              exit 1
            fi

      - name: Upload Lua library
        uses: actions/upload-artifact@v4
        with:
          name: steamrt-lua
          path: artifacts/liblua5.4.so
          if-no-files-found: error
