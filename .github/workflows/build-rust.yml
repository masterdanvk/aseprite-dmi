name: Build Rust Library
on:
  workflow_dispatch:
  push:
    paths:
      - '.github/workflows/build-rust.yml'
      - 'lib/**'

jobs:
  build-rust:
    name: Build Rust in Steam Runtime
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Build in Steam Runtime container
        uses: addnab/docker-run-action@v3
        with:
          image: registry.gitlab.steamos.cloud/steamrt/scout/sdk
          options: -v ${{ github.workspace }}:/work
          run: |
            set -ex
            apt-get update
            apt-get install -y curl build-essential gcc-9 g++-9

            # Create linker script inside container
            cat > /tmp/linker.sh << 'EOL'
            #!/bin/bash
            for arg do
              shift
              case $arg in
                (-lgcc_s) : ;;
                   (*) set -- "$@" "$arg" ;;
              esac
            done
            exec "$CC" "$@" -lgcc
            EOL
            chmod +x /tmp/linker.sh

            # Setup modern GCC
            export CC=gcc-9
            export CXX=g++-9

            # Install Rust
            curl -sSf https://sh.rustup.rs > rustup.sh
            export CARGO_HOME=/cargo
            sh rustup.sh --profile minimal -y
            export PATH="/cargo/bin:${PATH}"

            # Configure Rust to use our linker script
            export RUSTFLAGS="-C linker=/tmp/linker.sh"

            cd /work/lib
            cargo build --release

            mkdir -p /work/artifacts
            cp target/release/libdmi.so /work/artifacts/

      - name: Upload Rust library
        uses: actions/upload-artifact@v4
        with:
          name: steamrt-rust
          path: artifacts/libdmi.so
          if-no-files-found: error
